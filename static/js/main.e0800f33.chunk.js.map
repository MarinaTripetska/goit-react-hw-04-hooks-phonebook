{"version":3,"sources":["components/Filter/Filter.js","components/ContactList/ContactIItem/ContactItem.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","App.js","index.js"],"names":["inputFilterId","require","generate","Filter","value","onChange","className","htmlFor","id","type","ContactItem","name","number","onClick","href","ContactList","contacts","map","contact","shortid","ContactForm","state","inputNameId","inputPhoneId","handleChange","e","target","setState","onFormSubmit","preventDefault","props","handleSubmit","reset","this","onSubmit","pattern","title","required","Component","initialContacts","notify","text","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","App","filter","changeFilter","currentTarget","dataName","dataNumber","find","prevState","handleDelete","dataId","getVisibleContacts","normalizedFilter","toLowerCase","includes","savedContacts","JSON","parse","localStorage","getItem","length","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0800f33.chunk.js","sourcesContent":["import './Filter.scss'\r\nconst shortid = require('shortid')\r\n\r\nconst inputFilterId = shortid.generate()\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <div className=\"filterThumb\">\r\n    <label htmlFor={inputFilterId} className=\"filter-label\">\r\n      Find contacts by name\r\n    </label>\r\n    <input id={inputFilterId} type=\"text\" onChange={onChange} value={value} />\r\n  </div>\r\n)\r\n\r\nexport default Filter\r\n","import PropTypes from 'prop-types'\r\nimport { MdPhoneEnabled } from 'react-icons/md'\r\nimport { AiFillDelete } from 'react-icons/ai'\r\nimport './ContactItem.scss'\r\n\r\nconst ContactItem = ({ id, name, number, onClick }) => {\r\n  return (\r\n    <li id={id} className=\"contactItem\">\r\n      <span className=\"contactItem__name\">{name}:</span>\r\n      <a href={'tel: ' + name} className=\"contactItem__number\">\r\n        <MdPhoneEnabled /> {number}\r\n      </a>\r\n\r\n      <button className=\"btn-delete\" type=\"button\" onClick={() => onClick(id)}>\r\n        <AiFillDelete /> <span className=\"btn-delete--txt\">Delete</span>\r\n      </button>\r\n    </li>\r\n  )\r\n}\r\n\r\nContactItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ContactItem\r\n","import ContactItem from './ContactIItem/ContactItem'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './ContactList.scss'\r\n\r\nconst ContactList = ({ contacts, onClick }) => {\r\n  return (\r\n    <ul className=\"contactList\">\r\n      {contacts.map(contact => (\r\n        <ContactItem key={contact.id} id={contact.id} name={contact.name} number={contact.number} onClick={onClick} />\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n}\r\n\r\nexport default ContactList\r\n","import { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { MdAddIcCall } from 'react-icons/md'\r\nimport './ContactForm.scss'\r\nconst shortid = require('shortid')\r\n\r\nexport default class ContactForm extends Component {\r\n  static propTypes = {\r\n    handleSubmit: PropTypes.func.isRequired,\r\n  }\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  }\r\n\r\n  inputNameId = shortid.generate()\r\n  inputPhoneId = shortid.generate()\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target\r\n    this.setState({\r\n      [name]: value,\r\n    })\r\n  }\r\n\r\n  onFormSubmit = e => {\r\n    const { name, number } = this.state\r\n    e.preventDefault()\r\n    this.props.handleSubmit(name, number)\r\n    this.reset()\r\n  }\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' })\r\n  }\r\n\r\n  render() {\r\n    const { name, number } = this.state\r\n\r\n    return (\r\n      <form className=\"contactForm\" onSubmit={this.onFormSubmit}>\r\n        <label className=\"rowName\" htmlFor={this.inputNameId}>\r\n          Name\r\n          <input\r\n            className=\"input\"\r\n            id={this.inputNameId}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            onChange={this.handleChange}\r\n            value={name}\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label className=\"rowNumber\" htmlFor={this.inputPhoneId}>\r\n          Phone\r\n          <input\r\n            className=\"input\"\r\n            id={this.inputPhoneId}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            onChange={this.handleChange}\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <br />\r\n\r\n        <button className=\"buttonSubmit\" type=\"submit\">\r\n          <MdAddIcCall className=\"buttonSubmit-icon\" /> <span className=\"buttonSubmit-txt\">Add contact</span>\r\n        </button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n","import { Component } from 'react'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nimport Filter from './components/Filter'\r\nimport ContactList from './components/ContactList'\r\nimport ContactForm from './components/ContactForm'\r\nimport './App.scss'\r\n\r\nconst shortid = require('shortid')\r\n\r\nconst initialContacts = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n]\r\n\r\nconst notify = text =>\r\n  toast.error(text, {\r\n    position: 'top-center',\r\n    autoClose: 5000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n  })\r\n\r\nclass App extends Component {\r\n  state = {\r\n    filter: '',\r\n    contacts: [...initialContacts],\r\n  }\r\n\r\n  componentDidMount() {\r\n    const savedContacts = JSON.parse(localStorage.getItem('contacts'))\r\n\r\n    if (savedContacts && savedContacts.length > 0) {\r\n      this.setState({\r\n        contacts: [...savedContacts],\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\r\n  }\r\n\r\n  changeFilter = e => {\r\n    this.setState({\r\n      filter: e.currentTarget.value,\r\n    })\r\n  }\r\n\r\n  handleSubmit = (dataName, dataNumber) => {\r\n    const findSameName = this.state.contacts.find(({ name }) => name === dataName)\r\n\r\n    !findSameName\r\n      ? this.setState(prevState => {\r\n          return {\r\n            contacts: [...prevState.contacts, { id: shortid.generate(), name: dataName, number: dataNumber }],\r\n          }\r\n        })\r\n      : notify(`${dataName} is already in contacts!`)\r\n  }\r\n\r\n  handleDelete = dataId => {\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: prevState.contacts.filter(({ id }) => id !== dataId),\r\n      }\r\n    })\r\n  }\r\n\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state\r\n    const normalizedFilter = filter.toLowerCase()\r\n\r\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter))\r\n  }\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state\r\n    const visibleContacts = this.getVisibleContacts()\r\n    return (\r\n      <div className=\"mainThumb\">\r\n        <ToastContainer />\r\n        <h1 className=\"title\">Phonebook</h1>\r\n        <ContactForm handleSubmit={this.handleSubmit} />\r\n        {contacts.length > 0 && (\r\n          <div className=\"contactThumb\">\r\n            <h2 className=\"title\">Сontacts</h2>\r\n            <Filter value={filter} onChange={this.changeFilter} />\r\n            <ContactList contacts={visibleContacts} onClick={this.handleDelete} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}
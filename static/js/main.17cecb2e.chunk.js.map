{"version":3,"sources":["components/Filter/Filter.js","components/ContactList/ContactIItem/ContactItem.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","App.js","index.js"],"names":["inputFilterId","require","generate","Filter","value","onChange","className","htmlFor","id","type","ContactItem","name","number","onClick","ContactList","contacts","map","contact","shortid","ContactForm","state","inputNameId","inputPhoneId","handleChange","e","target","setState","onFormSubmit","preventDefault","props","handleSubmit","reset","this","onSubmit","pattern","title","required","Component","App","filter","changeFilter","currentTarget","dataName","dataNumber","find","alert","prevState","handleDelete","dataId","getVisibleContacts","normalizedFilter","toLowerCase","includes","visibleContacts","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17cecb2e.chunk.js","sourcesContent":["import './Filter.scss'\r\nconst shortid = require('shortid')\r\n\r\nconst inputFilterId = shortid.generate()\r\nconst Filter = ({ value, onChange }) => (\r\n  <div className=\"filterThumb\">\r\n    <label htmlFor={inputFilterId} className=\"filter-label\">\r\n      Find contacts by name\r\n    </label>\r\n    <input id={inputFilterId} type=\"text\" onChange={onChange} value={value} />\r\n  </div>\r\n)\r\n\r\nexport default Filter\r\n","import PropTypes from 'prop-types'\r\nimport './ContactItem.scss'\r\nconst ContactItem = ({ id, name, number, onClick }) => {\r\n  return (\r\n    <li id={id} className=\"contactItem\">\r\n      <span className=\"contactItem__name\">{name}:</span>\r\n      <span className=\"contactItem__number\">{number}</span>\r\n\r\n      <button className=\"btn-delete\" type=\"button\" onClick={() => onClick(id)}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  )\r\n}\r\nContactItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n}\r\nexport default ContactItem\r\n","import ContactItem from './ContactIItem/ContactItem'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ContactList = ({ contacts, onClick }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map(contact => (\r\n        <ContactItem key={contact.id} id={contact.id} name={contact.name} number={contact.number} onClick={onClick} />\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n}\r\n\r\nexport default ContactList\r\n","import { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './ContactForm.scss'\r\nconst shortid = require('shortid')\r\n\r\nexport default class ContactForm extends Component {\r\n  static propTypes = {\r\n    handleSubmit: PropTypes.func.isRequired,\r\n  }\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  }\r\n\r\n  inputNameId = shortid.generate()\r\n  inputPhoneId = shortid.generate()\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target\r\n    this.setState({\r\n      [name]: value,\r\n    })\r\n  }\r\n\r\n  onFormSubmit = e => {\r\n    const { name, number } = this.state\r\n    e.preventDefault()\r\n    this.props.handleSubmit(name, number)\r\n    this.reset()\r\n  }\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' })\r\n  }\r\n\r\n  render() {\r\n    const { name, number } = this.state\r\n\r\n    return (\r\n      <form className=\"contactForm\" onSubmit={this.onFormSubmit}>\r\n        <label className=\"inputName\" htmlFor={this.inputNameId}>\r\n          Name\r\n          <input\r\n            id={this.inputNameId}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            onChange={this.handleChange}\r\n            value={name}\r\n            required\r\n          />\r\n        </label>\r\n        <label className=\"inputNumber\" htmlFor={this.inputPhoneId}>\r\n          Phone\r\n          <input\r\n            id={this.inputPhoneId}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            onChange={this.handleChange}\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <br />\r\n        <button className=\"buttonSubmit\" type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n","import { Component } from 'react'\nimport Filter from './components/Filter'\nimport ContactList from './components/ContactList'\nimport ContactForm from './components/ContactForm'\nimport './App.scss'\nconst shortid = require('shortid')\n\n// const initialContacts = [\n//   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n// ]\nclass App extends Component {\n  state = {\n    filter: '',\n    contacts: [],\n  }\n\n  // componentDidMount() {\n  //   this.setState({\n  //     contacts: [...initialContacts],\n  //   })\n  // }\n\n  changeFilter = e => {\n    this.setState({\n      filter: e.currentTarget.value,\n    })\n  }\n  handleSubmit = (dataName, dataNumber) => {\n    const findSameName = this.state.contacts.find(({ name }) => name === dataName)\n\n    !findSameName\n      ? this.setState(prevState => {\n          return {\n            contacts: [...prevState.contacts, { id: shortid.generate(), name: dataName, number: dataNumber }],\n          }\n        })\n      : alert(`${dataName} is already in contacts!`)\n  }\n  handleDelete = dataId => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== dataId),\n      }\n    })\n  }\n  componentDidUpdate() {\n    this.getVisibleContacts()\n  }\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state\n    const normalizedFilter = filter.toLowerCase()\n\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter))\n  }\n\n  render() {\n    const { contacts, filter } = this.state\n    const visibleContacts = this.getVisibleContacts()\n    return (\n      <div className=\"mainThumb\">\n        <h1 className=\"title\">Phonebook</h1>\n        <ContactForm handleSubmit={this.handleSubmit} />\n        {contacts.length > 0 && (\n          <div className=\"contactThumb\">\n            <h2 className=\"title\">Сontacts</h2>\n            <Filter value={filter} onChange={this.changeFilter} />\n            <ContactList contacts={visibleContacts} onClick={this.handleDelete} />\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}
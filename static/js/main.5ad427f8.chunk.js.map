{"version":3,"sources":["GlobalStyles.jsx","nofifications/notifyError.js","components/Filter/Filter.jsx","components/ContactIItem/ContactsItem.styled.jsx","components/ContactIItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/BasicStyledComponents/Container.jsx","components/BasicStyledComponents/Title.jsx","components/BasicStyledComponents/Section.jsx","initialContacts.js","App.js","hooks/useLocalStorage.js","index.js"],"names":["GlobalStyle","createGlobalStyle","notify","text","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","Label","styled","label","Filter","value","onChange","type","Item","li","Name","span","Phone","a","ButtonDelete","button","ContactItem","id","name","number","onClick","href","StyledList","ul","ContactList","contacts","map","Form","form","Area","AreaName","AreaNumber","SubmitBtn","ContactForm","handleSubmit","useState","setName","setNumber","handleChange","e","target","reset","onSubmit","preventDefault","pattern","title","required","defaultProps","Container","div","headingStyle","css","H1","h1","H2","Section","section","initialContacts","shortid","require","App","filter","setFilter","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","setContacts","dataName","dataNumber","find","toLowerCase","prevState","generate","length","normalizedFilter","contact","includes","getVisibleContacts","dataId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ad427f8.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n:root{\r\n  --button-color: rgb(68, 68, 141);\r\n}\r\n\r\n*,\r\n*::before,\r\n*::after {\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody,\r\nh1,\r\nh2,\r\np,\r\nul,\r\nli\r\n {\r\n  margin: 0;\r\n}\r\nbody {\r\n  min-height: 100vh;\r\n  line-height: 1.5;\r\n  background-color: #e6f0ef;\r\n}\r\nul{\r\n  list-style: none;\r\n    padding: 0;\r\n}\r\na {\r\n  text-decoration-skip-ink: auto;\r\n}\r\ninput,\r\nbutton {\r\n  font: inherit;\r\n}\r\n\r\n\r\n`;\r\nexport default GlobalStyle;\r\n","import { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nconst notify = text =>\r\n  toast.error(text, {\r\n    position: 'top-center',\r\n    autoClose: 5000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n  })\r\n\r\nexport default notify\r\n","import styled from 'styled-components'\r\n\r\nconst Label = styled.label`\r\n  margin-bottom: 50px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n\r\n  font-weight: 600;\r\n  & input {\r\n    margin-left: 15px;\r\n  }\r\n`\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <Label>\r\n    Find contacts by name\r\n    <input type=\"text\" onChange={onChange} value={value} />\r\n  </Label>\r\n)\r\n\r\nexport default Filter\r\n","import styled from 'styled-components'\r\n\r\nexport const Item = styled.li`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  column-gap: 30px;\r\n\r\n  &:not(:last-child) {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  @media (max-width: 450px) {\r\n    column-gap: 15px;\r\n  }\r\n`\r\n\r\nexport const Name = styled.span`\r\n  font-weight: 600;\r\n  font-size: 1em;\r\n`\r\nexport const Phone = styled.a`\r\n  white-space: nowrap;\r\n  color: inherit;\r\n  text-decoration: none;\r\n  display: flex;\r\n  align-items: center;\r\n  column-gap: 7px;\r\n`\r\nexport const ButtonDelete = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  column-gap: 10px;\r\n\r\n  width: 100%;\r\n  max-width: 100px;\r\n  height: 35px;\r\n  padding: 5px;\r\n  background-color: var(--button-color);\r\n  color: white;\r\n  cursor: pointer;\r\n  user-select: none;\r\n  border: solid 1px black;\r\n  border-radius: 3px;\r\n\r\n  justify-self: end;\r\n\r\n  @media (max-width: 450px) {\r\n    width: 40px;\r\n    font-size: 22px;\r\n    & span {\r\n      display: none;\r\n    }\r\n  }\r\n`\r\n","import PropTypes from 'prop-types'\r\nimport { MdPhoneEnabled } from 'react-icons/md'\r\nimport { AiFillDelete } from 'react-icons/ai'\r\nimport { Item, Name, Phone, ButtonDelete } from './ContactsItem.styled'\r\n\r\nconst ContactItem = ({ id, name, number, onClick }) => {\r\n  return (\r\n    <Item id={id}>\r\n      <Name>{name}:</Name>\r\n      <Phone href={'tel: ' + name}>\r\n        <MdPhoneEnabled /> {number}\r\n      </Phone>\r\n\r\n      <ButtonDelete type=\"button\" onClick={() => onClick(id)}>\r\n        <AiFillDelete /> <span>Delete</span>\r\n      </ButtonDelete>\r\n    </Item>\r\n  )\r\n}\r\n\r\nContactItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ContactItem\r\n","import ContactItem from '../ContactIItem'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledList = styled.ul`\r\n  width: 100%;\r\n  max-width: 440px;\r\n  margin: 0 auto;\r\n`\r\n\r\nconst ContactList = ({ contacts, onClick }) => {\r\n  return (\r\n    <StyledList>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactItem key={id} id={id} name={name} number={number} onClick={onClick} />\r\n      ))}\r\n    </StyledList>\r\n  )\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n}\r\n\r\nexport default ContactList\r\n","import styled from 'styled-components'\r\n\r\nexport const Form = styled.form`\r\n  padding: 5px;\r\n\r\n  display: grid;\r\n  grid-template-areas:\r\n    'rowName buttonSubmit'\r\n    'rowNumber buttonSubmit';\r\n\r\n  grid-gap: 20px;\r\n\r\n  @media (max-width: 480px) {\r\n    grid-gap: 10px;\r\n    grid-template-areas:\r\n      'rowName '\r\n      'rowNumber'\r\n      'buttonSubmit';\r\n  }\r\n`\r\nconst Area = styled.label`\r\n  display: inline-flex;\r\n  justify-content: space-between;\r\n  column-gap: 20px;\r\n\r\n  font-weight: 700;\r\n  font-size: 1.5em;\r\n\r\n  & input {\r\n    width: 100%;\r\n    max-width: 300px;\r\n    min-width: 175px;\r\n  }\r\n`\r\n\r\nexport const AreaName = styled(Area)`\r\n  grid-area: rowName;\r\n`\r\nexport const AreaNumber = styled(Area)`\r\n  grid-area: rowNumber;\r\n`\r\n\r\nexport const SubmitBtn = styled.button`\r\n  grid-area: buttonSubmit;\r\n  margin-left: auto;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  column-gap: 20px;\r\n\r\n  padding: 5px 15px;\r\n  width: 100%;\r\n  max-width: 200px;\r\n\r\n  font-size: 20px;\r\n  color: white;\r\n  background-color: var(--button-color);\r\n\r\n  user-select: none;\r\n  border: solid 1px black;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n\r\n  & svg {\r\n    width: 30px;\r\n    height: 30px;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 16px;\r\n    column-gap: 10px;\r\n  }\r\n\r\n  @media (max-width: 550px) {\r\n    & span {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 480px) {\r\n    font-size: 16px;\r\n    width: 60px;\r\n    height: 60px;\r\n  }\r\n`\r\n","import { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { MdAddIcCall } from 'react-icons/md'\r\nimport { Form, AreaName, AreaNumber, SubmitBtn } from './ContactForm.styled'\r\n\r\nexport default function ContactForm({ handleSubmit }) {\r\n  const [name, setName] = useState('')\r\n  const [number, setNumber] = useState('')\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value)\r\n        break\r\n\r\n      case 'number':\r\n        setNumber(value)\r\n        break\r\n\r\n      default:\r\n        return\r\n    }\r\n  }\r\n\r\n  const onFormSubmit = e => {\r\n    e.preventDefault()\r\n    handleSubmit(name, number)\r\n    reset()\r\n  }\r\n\r\n  const reset = () => {\r\n    setName('')\r\n    setNumber('')\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={onFormSubmit}>\r\n      <AreaName>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"The name can only contain letters, an apostrophe, a dash, and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan, etc.\"\r\n          onChange={handleChange}\r\n          value={name}\r\n          required\r\n        />\r\n      </AreaName>\r\n\r\n      <AreaNumber>\r\n        Phone\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          onChange={handleChange}\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"The phone number must be numeric and may contain spaces, dashes, parentheses, and may begin with +\"\r\n          required\r\n        />\r\n      </AreaNumber>\r\n\r\n      <br />\r\n\r\n      <SubmitBtn type=\"submit\">\r\n        <MdAddIcCall /> <span>Add contact</span>\r\n      </SubmitBtn>\r\n    </Form>\r\n  )\r\n}\r\nContactForm.defaultProps = {\r\n  handleSubmit: () => null,\r\n}\r\nContactForm.propTypes = {\r\n  handleSubmit: PropTypes.func.isRequired,\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  margin: 50px auto;\r\n  border: solid 1px black;\r\n  max-width: 800px;\r\n  padding: 30px;\r\n`;\r\n","import styled, { css } from 'styled-components'\r\n\r\nconst headingStyle = css`\r\n  text-align: center;\r\n  margin-bottom: 45px;\r\n`\r\n\r\nexport const H1 = styled.h1`\r\n  font-size: 24px;\r\n\r\n  ${headingStyle}\r\n`\r\n\r\nexport const H2 = styled.h1`\r\n  font-size: 18px;\r\n\r\n  ${headingStyle}\r\n`\r\n","import styled from \"styled-components\";\r\n\r\nexport const Section = styled.section`\r\n  background-color: rgb(208, 213, 247);\r\n  padding: 25px;\r\n  border-radius: 5px;\r\n`;\r\n","const initialContacts = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n]\r\n\r\nexport { initialContacts }\r\n","import { useState } from 'react'\r\nimport useLocalStorage from './hooks/useLocalStorage'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport notify from './nofifications/notifyError'\r\nimport Filter from './components/Filter'\r\nimport ContactList from './components/ContactList'\r\nimport ContactForm from './components/ContactForm'\r\nimport { Container, Section, H1, H2 } from './components/BasicStyledComponents'\r\n\r\nimport { initialContacts } from './initialContacts'\r\n\r\nconst shortid = require('shortid')\r\n\r\nexport default function App() {\r\n  const [filter, setFilter] = useState('')\r\n  const [contacts, setContacts] = useLocalStorage('contacts', [...initialContacts])\r\n\r\n  const changeFilter = e => setFilter(e.target.value)\r\n\r\n  const handleSubmit = (dataName, dataNumber) => {\r\n    const findSameName = contacts.find(({ name }) => name.toLowerCase() === dataName.toLowerCase())\r\n\r\n    !findSameName\r\n      ? setContacts(prevState => [...prevState, { id: shortid.generate(), name: dataName, number: dataNumber }])\r\n      : notify(`${dataName} is already in contacts!`)\r\n  }\r\n\r\n  const getVisibleContacts = () => {\r\n    const normalizedFilter = filter.toLowerCase()\r\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter))\r\n  }\r\n\r\n  const handleDelete = dataId => {\r\n    setContacts(prevState => prevState.filter(({ id }) => id !== dataId))\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <ToastContainer />\r\n      <H1>Phone book</H1>\r\n      <ContactForm handleSubmit={handleSubmit} />\r\n\r\n      {contacts.length > 0 && (\r\n        <Section>\r\n          <H2>Сontacts</H2>\r\n          <Filter value={filter} onChange={changeFilter} />\r\n          <ContactList contacts={getVisibleContacts()} onClick={handleDelete} />\r\n        </Section>\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n","import { useState, useEffect } from 'react'\r\n\r\nexport default function useLocalStorage(key, defaultValue) {\r\n  const [state, setState] = useState(() => {\r\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue\r\n  })\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state))\r\n  }, [key, state])\r\n\r\n  return [state, setState]\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport GlobalStyle from './GlobalStyles'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <GlobalStyle />\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n"],"sourceRoot":""}